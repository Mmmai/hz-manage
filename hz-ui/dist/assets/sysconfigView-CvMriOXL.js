import{d as w,g as C,u as h,A as $,a as I,r as x,q as R,e as s,ag as N,c as k,o as S,b as a,w as u,i as K,k as T,t as B,aa as A,v as L,aR as j,aS as q,an as g}from"./index-Gch8CQn_.js";import{u as z}from"./config-LD_K2_zU.js";const n=[];for(let e=0;e<256;++e)n.push((e+256).toString(16).slice(1));function G(e,t=0){return(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase()}let f;const H=new Uint8Array(16);function M(){if(!f){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");f=crypto.getRandomValues.bind(crypto)}return f(H)}const F=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),b={randomUUID:F};function J(e,t,r){var c;if(b.randomUUID&&!e)return b.randomUUID();e=e||{};const o=e.random??((c=e.rng)==null?void 0:c.call(e))??M();if(o.length<16)throw new Error("Random bytes length must be >= 16");return o[6]=o[6]&15|64,o[8]=o[8]&63|128,G(o)}const O={class:"card"},P={style:{"margin-right":"20px"}},Q=w({__name:"securityConfig",setup(e){const{proxy:t}=C();h();const r=z(),o=$(()=>r.gmCry),c=I({key:"",region:"",date:""}),l=x({}),p=async()=>{let i=await t.$api.getSysConfig({param_name:"secret_key"});l.value=i.data.results[0]},_=async()=>{let i=J().replace(/-/g,"").slice(0,16);const v=q.service({lock:!0,text:"更新中...",background:"rgba(0, 0, 0, 0.7)"});let m=await t.$api.updateSysConfig({id:l.value.id,param_name:"secret_key",param_value:i});if(m.status=="200"){console.log(`旧密钥：${o.value.key};新密钥：${m.data.param_value}`);let d=await t.$api.reEncrypt({},3e5);d.status=="204"||d.status=="200"?g({title:"Success",message:"数据重新加密成功~",type:"success",duration:3e3}):(g({title:"Error",message:"数据重新加密失败！",type:"error"}),console.log("数据重新加密失败"));let y=await t.$api.getSysConfig({params:"gm"});r.setGmCry(y.data)}else g({title:"Error",message:"密钥更新失败！",type:"error",duration:3e3}),console.log("更新密钥失败");setTimeout(()=>{v.close(),window.location.reload()},2e3)};return R(()=>{p()}),(i,v)=>{const m=s("CopyDocument"),d=s("el-icon"),y=s("el-button"),U=s("el-tooltip"),V=s("el-form-item"),D=s("el-form"),E=N("copy");return S(),k("div",O,[a(D,{model:c,class:"demo-form-inline"},{default:u(()=>[a(V,{label:"密码密钥"},{default:u(()=>[K("span",P,[T(B(o.value.key)+" ",1),a(d,null,{default:u(()=>[A(a(m,null,null,512),[[E,o.value.key]])]),_:1})]),a(U,{class:"box-item",effect:"dark",content:"更新密钥",placement:"top"},{default:u(()=>[a(y,{size:"small",onClick:_,type:"warning",icon:L(j),circle:""},null,8,["icon"])]),_:1})]),_:1})]),_:1},8,["model"])])}}}),W={class:"card"},Z=w({__name:"sysconfigView",setup(e){const{proxy:t}=C();h();const r=x("security"),o=(c,l)=>{console.log(c,l)};return(c,l)=>{const p=s("el-tab-pane"),_=s("el-tabs");return S(),k("div",W,[a(_,{modelValue:r.value,"onUpdate:modelValue":l[0]||(l[0]=i=>r.value=i),class:"demo-tabs",onTabClick:o},{default:u(()=>[a(p,{label:"安全参数",name:"security"},{default:u(()=>[a(Q)]),_:1})]),_:1},8,["modelValue"])])}}});export{Z as default};
